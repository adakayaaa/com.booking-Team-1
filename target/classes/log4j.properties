# Define root logger with file appender
log4j.rootLogger = INFO, FILE, stdout
#This line configures the root logger with multiple appenders (FILE and stdout).
# The root logger is the top-level logger in the hierarchy and is
# used to capture log messages from all loggers in your application.

# Print log in File
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=automation.out
log4j.appender.FILE.Append=false
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#his section configures the FILE appender, which outputs log messages to a file named automation.out. Here's a breakdown of the properties:

#log4j.appender.FILE: Specifies the appender's name.
#org.apache.log4j.FileAppender: Specifies the appender class.
#log4j.appender.FILE.File: Specifies the name of the output file.
#log4j.appender.FILE.Append: Specifies whether to append to the existing file (false means to overwrite).
#log4j.appender.FILE.layout: Specifies the layout class for formatting log messages.
#log4j.appender.FILE.layout.ConversionPattern: Specifies the pattern for formatting log messages.
# In this case, it includes the date, log level, class name, line number, and the log message itself.

# This will print log in console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1} :%L - %m%n
#This section configures the stdout appender, which outputs log messages to the console. It has properties similar to the FILE appender, specifying the appender class, layout, and conversion pattern.
#
#Overall, this log4j.properties file is configuring Log4j to log messages with
# a specific format to both a file (automation.out) and the console.
# You can customize the configuration based on your specific logging needs.